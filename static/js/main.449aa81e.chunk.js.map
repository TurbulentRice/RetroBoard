{"version":3,"sources":["logo.svg","lib/helpers.js","contexts/StoriesContext.jsx","components/StoryCard.jsx","components/StoryColumn.jsx","components/RetroBoard.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["getUID","Math","floor","random","getNow","Date","toDateString","StoriesContext","createContext","StoriesProvider","children","useState","title","id","owner","description","points","col","created","stories","setStories","Provider","value","addStory","newStory","currentStories","removeStory","storyToRemove","filter","story","moveStory","storyToMove","map","currentStory","saveStory","storyToSave","StoryCard","useContext","editedStory","setEditedStory","editMode","setEditMode","toggleEditMode","handleSave","event","preventDefault","useDrag","type","item","collect","monitor","isDragging","drag","ref","className","draggable","opacity","style","color","onClick","htmlFor","onSubmit","e","display","placeholder","onChange","target","textOverflow","rows","StoryColumn","colID","useDrop","accept","drop","console","log","isOver","options","sort","firstCard","secondCard","index","RetroBoard","NavBar","logo","fontSize","href","src","alt","height","width","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449aa81e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24f1cbf3.svg\";","/*\n  Some helpful functions\n*/\n\n// Unique ID generator\n// Got this from https://stackoverflow.com/a/21816636\nexport const getUID = () => Math.floor(100000 + Math.random() * 900000);\n\n// Get current date as string\nexport const getNow = () => new Date().toDateString();\n\n// Return a new \"empty\" story object\n// Will overwrite template with anything provided in options obj\nexport const getNewStory = (options) => ({\n  title: \"\",\n  id: getUID(),\n  owner: \"\",\n  description: \"\",\n  points: 0,\n  col: 1,\n  created: getNow(),\n  ...options\n})\n\nexport const getTestStories = () => [\n  {\n    title: \"Get new access token\",\n    id: getUID(),\n    owner: \"Louise Belcher\",\n    description: \"Fix issue with multi-factor authentication\",\n    points: 3,\n    col: 1,\n    created: getNow()\n  },\n  {\n    title: \"Push code to production\",\n    id: getUID(),\n    owner: \"Louise Belcher\",\n    description: \"Commit new changes and deploy to production server.\",\n    points: 2,\n    col: 2,\n    created: getNow()\n  },\n  {\n    title: \"Fix major security issue\",\n    id: getUID(),\n    owner: \"A Person\",\n    description: \"Get that thing done\",\n    points: 6,\n    col: 3,\n    created: getNow()\n  },\n  {\n    title: \"Make a sandwhich\",\n    id: getUID(),\n    owner: \"Russell Crowe\",\n    description: \"I really want a ham and swiss sandwhich. I think i should make one.\",\n    points: 1,\n    col: 3,\n    created: getNow()\n  },\n]","import { createContext, useState } from 'react';\nimport { getTestStories } from '../lib/helpers';\n\nexport const StoriesContext = createContext();\n\n/*\n  Keep track of all stories in single array of objects, no inherent order, like bucket.\n  Components will \"pick out\" stories relevant to them based on state/id, sort by points.\n*/\nexport function StoriesProvider({ children }) {\n  const [stories, setStories] = useState(getTestStories());\n\n  const addStory = newStory => setStories(currentStories => [newStory, ...currentStories]);\n  const removeStory = storyToRemove => setStories(currentStories => currentStories.filter(story => story.id !== storyToRemove.id))\n  const moveStory = (storyToMove, col) => setStories(currentStories => currentStories.map(currentStory => {\n    return currentStory.id === storyToMove.id ? {...currentStory, col} : currentStory\n  }));\n  const saveStory = (storyToSave) => setStories(currentStories => currentStories.map(currentStory => {\n    return currentStory.id === storyToSave.id ? { ...storyToSave} : currentStory;\n  }));\n  \n  return (\n    <StoriesContext.Provider value={{stories, addStory, removeStory, moveStory, saveStory}}>\n      {children}\n    </StoriesContext.Provider>\n  )\n}\n\n\n\n\n\n","import { StoriesContext } from '../contexts/StoriesContext'\nimport { useState, useContext } from 'react';\nimport { useDrag } from 'react-dnd';\n/*\nstory = {\n  title: \"\",\n  owner: \",\"\n  descrption: \"\",\n  points: Number,\n  id: Number,\n  col: Number,\n  created: Date\n}\n*/\n\nfunction StoryCard ({ story }) {\n  const { removeStory, saveStory } = useContext(StoriesContext);\n\n  // Temporary story input data - initialized to shallow copy of story prop\n  const [ editedStory, setEditedStory ] = useState({ ...story });\n  const [ editMode, setEditMode ] = useState(false);\n\n  const resetEditedStory = () => setEditedStory({ ...story });\n  const handleEdit = () => {\n    resetEditedStory();\n    toggleEditMode();\n  }\n  const toggleEditMode = () => setEditMode(!editMode);\n  const handleSave = event => {\n    event.preventDefault();\n    saveStory(editedStory);\n    editMode && toggleEditMode();\n  }\n\n  // Points methods will use saveStory too\n  const increasePoints = () => saveStory({...story, points: (story.points + 1) > 9 ? story.points : story.points + 1})\n  const decreasePoints = () => saveStory({...story, points: (story.points - 1) < 0 ? story.points : story.points - 1})\n\n  // Drag n drop stuff\n  const [{ isDragging }, drag] = useDrag({\n    type: 'card',\n    item: {\n      type: 'card',\n      id: story.id\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  return (\n    <div id={story.id}\n      ref={drag}\n      className=\"card text-start mb-3\"\n      draggable={true}\n      // onDragStart={e => drag(e)}\n      opacity={isDragging ? '0.5' : '1'}>\n\n      {/* Header */}\n      <div className=\"card-header d-flex justify-content-between\"> \n        {`ID#${story.id}`}\n\n        <label> {story.points}\n            <button className=\"btn btn-sm m-0\" style={{color: \"green\"}} onClick={increasePoints}>\n              <i className=\"fas fa-arrow-up\"></i>\n            </button>\n            <button className=\"btn btn-sm m-0\" style={{color: \"red\"}} onClick={decreasePoints}>\n              <i className=\"fas fa-arrow-down\"></i>\n            </button>\n        </label>\n            \n\n\n        <div>\n          <button type='submit' htmlFor={`edit-mode-form-${story.id}`} className=\"btn btn-sm btn-light p-0 me-2\" onClick={handleSave}>\n            <i className=\"fal fa-save\"></i>\n          </button>\n          <button className=\"btn btn-sm btn-light p-0\" onClick={handleEdit}>\n            <i className=\"fal fa-edit\"></i>\n          </button>\n        </div>\n        \n      </div>\n\n      {!editMode\n\n      // Normal mode card body\n      ?\n      \n      <div className=\"card-body pt-1\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <small className=\"card-text text-muted mb-1\">{`Owner: ${story.owner}`}</small>\n            <p className=\"card-text lead mb-1\">{story.title}</p>\n          </div>\n\n        </div>\n        <p className=\"card-text\">{story.description}</p>\n      </div>\n\n      // Edit Mode card body\n      :\n      \n      <div className=\"card-body\">\n        <form id={`edit-mode-form-${story.id}`} className=\"form-group\" onSubmit={e => handleSave(e)}>\n\n          {/* Need this to enable submit on return press */}\n          <input type=\"submit\" style={{display: 'none'}} />\n\n          <input id={`owner-${story.id}`}\n            className=\"form-control mb-2\"\n            placeholder={story.owner || 'Owner'}\n            value={editedStory.owner}\n            onChange={e => setEditedStory({...editedStory, owner: e.target.value})}>\n          </input>\n\n          <input id={`title-${story.id}`}\n            className=\"lead form-control mb-2\"\n            style={{textOverflow: 'ellipsis'}}\n            placeholder={story.title || 'Title'}\n            type=\"text\"\n            value={editedStory.title}\n            onChange={e => setEditedStory({...editedStory, title: e.target.value})}>\n          </input>\n\n          <textarea id={`description-${story.id}`}\n            className=\"form-control\"\n            rows='4'\n            placeholder={story.description || 'Description'}\n            type=\"text\"\n            value={editedStory.description}\n            onChange={e => setEditedStory({...editedStory, description: e.target.value})}>\n          </textarea>\n\n        </form>\n      </div>\n      }\n\n      {/* Footer */}\n      <div className=\"card-footer d-flex justify-content-between\">\n        <small className=\"text-muted\">Created {story.created}</small>\n        <button className=\"btn btn-sm btn-light p-0\" onClick={() => removeStory(story)}>\n          <i className=\"fad fa-trash\"></i>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default StoryCard;","import { getNewStory } from '../lib/helpers'\nimport { useDrop } from 'react-dnd';\nimport StoryCard from './StoryCard';\nimport { useContext } from 'react';\nimport { StoriesContext } from '../contexts/StoriesContext'\n\n// Receives stories, returns bootstrap col with cards\nfunction StoryColumn ({ title, colID }) {\n  const { stories, addStory, moveStory } = useContext(StoriesContext)\n\n  // Filter by col, Sort by points\n  const cardStories = () => stories.filter(story => story.col === colID).sort((firstCard, secondCard) => {\n    return secondCard.points - firstCard.points\n  });\n\n  // Make a new empty story object w/ colID and add to StoryContext\n  const handleAddStory = () => addStory(getNewStory({col: colID}));\n\n  // Accept drop\n  const [{ isOver }, drop] = useDrop({\n    accept: 'card',\n    drop: (item, monitor) => {\n      console.log(item)\n      // \"Move\" story by changing associated colID\n      moveStory(item, colID)\n    }\n    ,\n    // Change this to change how items interact when hovering\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    })\n  })\n\n  return (\n    <div className=\"col\" ref={drop}>\n      <h2 className=\"display-6\">{title}</h2>\n\n      <div className=\"d-grid gap-2\">\n        <button className=\"btn btn-sm btn-success mb-2\" type='button' onClick={handleAddStory}>+</button>\n      </div>\n      \n      {cardStories().map((story, index) => <StoryCard story={story} key={index}></StoryCard>)}\n      \n    </div>\n  )\n}\n\nexport default StoryColumn;","import StoryColumn from './StoryColumn'\n\nfunction RetroBoard () {\n  // Column components\n  return (\n      <div className=\"container mt-5 p-0 mx-auto\">\n        <div className=\"row\">\n\n          {/* Went wells */}\n          <StoryColumn title='What went well' colID={1}></StoryColumn>\n\n          {/* To improves */}\n          <StoryColumn title='To improve' colID={2}></StoryColumn>\n\n          {/* Action items */}\n          <StoryColumn title='Action items' colID={3}></StoryColumn>\n\n        </div>\n      </div>\n  )\n}\n\nexport default RetroBoard;","function NavBar ({ logo }) {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container-fluid\">\n\n        <a className=\"navbar-brand display-6 ms-4\" style={{fontSize: 20}} href=\"/\">\n          <img src={logo} alt={'Parrot Icon'} height='40' width='40'></img>  \n          RetroBoard\n        </a>\n          \n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar;","import logo from './logo.svg';\nimport './App.css';\nimport RetroBoard from './components/RetroBoard';\nimport NavBar from './components/NavBar';\nimport { StoriesProvider } from './contexts/StoriesContext'\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend} from 'react-dnd-html5-backend'\n\nfunction App() {\n  /*\n    App will just handle presenting main components\n    Wraps rest of app in story context\n  */\n  return (\n    <StoriesProvider>\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"App\">\n\n          <NavBar logo={logo}></NavBar>\n\n          <RetroBoard></RetroBoard>\n          \n        </div>\n      </DndProvider>\n    </StoriesProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}